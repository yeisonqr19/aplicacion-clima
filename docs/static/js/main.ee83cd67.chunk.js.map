{"version":3,"sources":["components/Clima.jsx","components/Error.jsx","components/Form.jsx","hooks/useForm.js","components/ui/Header.jsx","App.jsx","index.js"],"names":["Clima","resultado","name","main","weather","description","temp","temp_max","temp_min","className","Error","React","memo","mensaje","Form","setBusqueda","useState","error","setError","initialState","formValues","setFormValues","handleInputChange","target","value","reset","useForm","ciudad","pais","onSubmit","e","preventDefault","trim","type","id","autoComplete","onChange","htmlFor","Header","titulo","href","App","resultadoInicial","JSON","parse","localStorage","getItem","busqueda","setResultado","useEffect","setItem","stringify","Componente","a","url","encodeURI","fetch","peticion","json","cod","consultarApi","message","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee83cd67.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Clima = ({ resultado }) => {\n  const { name, main, weather } = resultado;\n\n  if (!name) return null;\n  const { description } = !!weather && weather[0];\n  const { temp, temp_max, temp_min } = main;\n\n  return (\n    <div className=\"card-panel white col s12\">\n      <div className=\"black-text\">\n        <h2>El clima de {name} esta: </h2>\n        <p className=\"flow-text\">{description}</p>\n        <h2>con una Temperatura de: </h2>\n        <p className=\"temperatura\">\n          {temp}\n          <span>&#x2103;</span>\n        </p>\n\n        <p>\n          Temperatura Maxima:\n          {temp_max}\n          <span>&#x2103;</span>\n        </p>\n\n        <p>\n          Temperatura Minima:\n          {temp_min}\n          <span>&#x2103;</span>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nClima.propTypes = {\n  resultado: PropTypes.object.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Error = React.memo(({ mensaje }) => {\n  return (\n    <>\n      <p className=\"red darken-4 error\">{mensaje}</p>\n    </>\n  );\n});\n\nError.propTypes = {\n  mensaje: PropTypes.string.isRequired,\n};\n","import React, { useState } from \"react\";\nimport { useForm } from \"../hooks/useForm\";\nimport { Error } from \"./Error\";\nimport PropTypes from \"prop-types\";\n\nexport const Form = ({ setBusqueda }) => {\n  const [error, setError] = useState(false);\n\n  const { formValues, handleInputChange, reset } = useForm({\n    ciudad: \"\",\n    pais: \"\",\n  });\n\n  const { ciudad, pais } = formValues;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (ciudad.trim() === \"\" || pais.trim() === \"\") {\n      setError(true);\n      return;\n    }\n    setError(false);\n    setBusqueda(formValues);\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {error && <Error mensaje=\"Ambos Campos son Obligatorios\" />}\n\n      <div className=\"input-field col s12\">\n        <input\n          type=\"text\"\n          name=\"ciudad\"\n          id=\"ciudad\"\n          autoComplete=\"off\"\n          value={ciudad}\n          onChange={handleInputChange}\n        />\n        <label htmlFor=\"ciudad\">Ciudad: </label>\n      </div>\n\n      <div className=\"input-field col s12\">\n        <input\n          type=\"text\"\n          name=\"pais\"\n          id=\"pais\"\n          autoComplete=\"off\"\n          value={pais}\n          onChange={handleInputChange}\n        />\n        <label htmlFor=\"pais\">Pais: </label>\n\n        <div className=\"input-field col s12\">\n          <button\n            type=\"submit\"\n            className=\"waves-effect waves-light btn-large btn-block yellow accent-4 col s12\"\n            value=\"buscar clima\"\n          >\n            Buscar Clima\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  setBusqueda: PropTypes.func.isRequired,\n};\n","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n  const [formValues, setFormValues] = useState(initialState);\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value,\n    });\n  };\n\n  const reset = () => {\n    setFormValues(initialState);\n  };\n\n  return {\n    formValues,\n    handleInputChange,\n    reset,\n  };\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Header = ({ titulo }) => {\n  return (\n    <div>\n      <nav>\n        <div className=\"nav-wrapper light-blue darken-2\">\n          <a href=\"#!\" className=\"brand-logo\">\n            {titulo}\n          </a>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  titulo: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Clima } from \"./components/Clima\";\nimport { Form } from \"./components/Form\";\nimport { Header } from \"./components/ui/Header\";\nimport { Error } from \"./components/Error\";\n\nfunction App() {\n  let resultadoInicial = JSON.parse(localStorage.getItem(\"busqueda\"));\n\n  if (!resultadoInicial) {\n    resultadoInicial = {};\n  }\n\n  const [busqueda, setBusqueda] = useState(resultadoInicial);\n\n  const [resultado, setResultado] = useState({});\n\n  useEffect(() => {\n    localStorage.setItem(\"busqueda\", JSON.stringify(busqueda));\n  }, [busqueda]);\n\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const consultarApi = async () => {\n      if (busqueda.ciudad !== \"\" || busqueda.pais !== \"\") {\n        let url = `https://api.openweathermap.org/data/2.5/weather?q=${encodeURI(\n          busqueda.ciudad\n        )},${encodeURI(\n          busqueda.pais\n        )}&lang=es&units=metric&appid=4813f5dfc1b41f8440029db8081156aa`;\n\n        const peticion = await fetch(url);\n        const resultado = await peticion.json();\n\n        setResultado(resultado);\n\n        if (resultado?.cod === \"404\") {\n          setError(true);\n        } else {\n          setError(false);\n        }\n      }\n    };\n    consultarApi();\n  }, [busqueda]);\n\n  let Componente;\n  if (error) {\n    Componente = <Error mensaje={resultado.message} />;\n  } else {\n    Componente = <Clima resultado={resultado} />;\n  }\n\n  setTimeout(() => {\n    setError(false);\n  }, 4000);\n\n  return (\n    <>\n      <Header titulo=\"Aplicacion Del Clima\" />\n      <div className=\"contenedor-form\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col m6 s12\">\n              <Form setBusqueda={setBusqueda} />\n            </div>\n            <div className=\"col m6 s12\">{Componente}</div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}